%!PS-Adobe-2.0 EPSF-2.0
%%Title: /media/li9i/var/elements/PhD/fourier_scan_to_map_scan_matcher/struct/scripts_phd/experiments/improvement_percent/pose_improvement_circles_sm0.tex
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Fri Apr  8 15:56:57 2022
%%DocumentFonts: 
%%BoundingBox: 50 50 450 400
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 2 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 450 50 lineto 450 400 lineto 50 400 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (/media/li9i/var/elements/PhD/fourier_scan_to_map_scan_matcher/struct/scripts_phd/experiments/improvement_percent/pose_improvement_circles_sm0.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (li9i)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Apr  8 15:56:57 2022)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.267 .2727 .2771 .2804 .2824 .2832 .2828 .2812 .2785 .2747 .27 .2644 
  .258 .2511 .2437 .2361 .2283 .2204 .2127 .2051 .1977 .1906 .1838 .1773 
  .171 .1648 .1588 .153 .1471 .1414 .1358 .1306 .1259 .1222 .1199 .1196 .122 
  .1277 .1368 .1496 .166 .1855 .208 .2331 .2605 .29 .3213 .3544 .3889 .4249 
  .4622 .5008 .5403 .5809 .6222 .6641 .7064 .7489 .7913 .8333 .8747 .9153 
  .9548 .9932 ] def
/GreenA [.0049 .0258 .0509 .0742 .096 .1169 .1374 .1575 .1773 .197 .2163 
  .2354 .2542 .2726 .2906 .3083 .3256 .3425 .3591 .3754 .3913 .4071 .4226 
  .4379 .4531 .4681 .4831 .4981 .513 .5279 .5428 .5577 .5726 .5875 .6024 
  .6173 .6321 .6469 .6616 .6761 .6905 .7047 .7187 .7324 .7458 .7588 .7715 
  .7837 .7955 .8067 .8173 .8274 .8369 .8457 .8538 .8613 .8682 .8745 .8803 
  .8858 .8909 .896 .901 .9062 ] def
/BlueA [.3294 .3534 .3762 .3979 .4183 .4372 .4546 .4704 .4847 .4973 .5083 
  .5177 .5258 .5325 .5381 .5427 .5463 .5493 .5516 .5535 .555 .5561 .557 
  .5576 .558 .5581 .5581 .5577 .557 .5559 .5543 .5522 .5494 .546 .5418 .5368 
  .5308 .5239 .516 .5069 .4968 .4854 .4729 .4591 .4441 .4278 .4103 .3915 
  .3714 .3501 .3275 .3038 .2789 .253 .2262 .1989 .1715 .145 .1213 .1033 
  .0954 .1005 .1179 .1439 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 1.00 1.00 C 1.000 80 5614 3118 1314 BoxColFill
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 5715 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 6221 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 6727 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 303 5614 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1194 5614 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2085 5614 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2843 5614 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1.000 UP
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C LTb
LCb setrgbcolor
2.000 UP
4.000 UL
LTb
0.75 0.75 0.75 C 2843 5614 M
0 1315 V
6.402 UP
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.45 0.74 C 2840 6667 CircleF
2840 6667 CircleF
5.828 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.85 0.33 0.10 C 722 5989 CircleF
722 5989 CircleF
6.228 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.93 0.69 0.13 C 2232 6450 CircleF
2232 6450 CircleF
5.713 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.49 0.18 0.56 C 1695 6090 CircleF
1695 6090 CircleF
6.190 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.47 0.67 0.19 C 1561 6307 CircleF
1561 6307 CircleF
5.507 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.30 0.75 0.93 C 2529 6112 CircleF
2529 6112 CircleF
6.400 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.98 0.71 0.73 C 2836 6664 CircleF
2836 6664 CircleF
6.400 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.97 0.41 0.63 C 2843 6666 CircleF
2843 6666 CircleF
6.396 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 0.00 1.00 C 2843 6664 CircleF
2843 6664 CircleF
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
0.500 UL
LTb
0.15 0.15 0.15 C 80 5614 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 80 6929 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 80 5614 M
0 1315 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 3199 5614 M
0 1315 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.267 .2727 .2771 .2804 .2824 .2832 .2828 .2812 .2785 .2747 .27 .2644 
  .258 .2511 .2437 .2361 .2283 .2204 .2127 .2051 .1977 .1906 .1838 .1773 
  .171 .1648 .1588 .153 .1471 .1414 .1358 .1306 .1259 .1222 .1199 .1196 .122 
  .1277 .1368 .1496 .166 .1855 .208 .2331 .2605 .29 .3213 .3544 .3889 .4249 
  .4622 .5008 .5403 .5809 .6222 .6641 .7064 .7489 .7913 .8333 .8747 .9153 
  .9548 .9932 ] def
/GreenA [.0049 .0258 .0509 .0742 .096 .1169 .1374 .1575 .1773 .197 .2163 
  .2354 .2542 .2726 .2906 .3083 .3256 .3425 .3591 .3754 .3913 .4071 .4226 
  .4379 .4531 .4681 .4831 .4981 .513 .5279 .5428 .5577 .5726 .5875 .6024 
  .6173 .6321 .6469 .6616 .6761 .6905 .7047 .7187 .7324 .7458 .7588 .7715 
  .7837 .7955 .8067 .8173 .8274 .8369 .8457 .8538 .8613 .8682 .8745 .8803 
  .8858 .8909 .896 .901 .9062 ] def
/BlueA [.3294 .3534 .3762 .3979 .4183 .4372 .4546 .4704 .4847 .4973 .5083 
  .5177 .5258 .5325 .5381 .5427 .5463 .5493 .5516 .5535 .555 .5561 .557 
  .5576 .558 .5581 .5581 .5577 .557 .5559 .5543 .5522 .5494 .546 .5418 .5368 
  .5308 .5239 .516 .5069 .4968 .4854 .4729 .4591 .4441 .4278 .4103 .3915 
  .3714 .3501 .3275 .3038 .2789 .253 .2262 .1989 .1715 .145 .1213 .1033 
  .0954 .1005 .1179 .1439 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 1.00 1.00 C 1.000 80 4228 3118 1314 BoxColFill
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 4329 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 4835 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 5341 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 303 4228 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1194 4228 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2085 4228 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2843 4228 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1.000 UP
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2.000 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.75 0.75 0.75 C 2843 4228 M
0 1315 V
6.285 UP
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.45 0.74 C 2684 5180 CircleF
2684 5180 CircleF
5.921 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.85 0.33 0.10 C 1073 4704 CircleF
1073 4704 CircleF
6.214 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.93 0.69 0.13 C 2228 5055 CircleF
2228 5055 CircleF
5.692 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.49 0.18 0.56 C 1690 4693 CircleF
1690 4693 CircleF
6.264 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.47 0.67 0.19 C 2194 5077 CircleF
2194 5077 CircleF
5.582 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.30 0.75 0.93 C 2711 4791 CircleF
2711 4791 CircleF
6.353 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.98 0.71 0.73 C 2832 5250 CircleF
2832 5250 CircleF
6.381 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.97 0.41 0.63 C 2841 5268 CircleF
2841 5268 CircleF
6.377 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 0.00 1.00 C 2841 5265 CircleF
2841 5265 CircleF
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
0.500 UL
LTb
0.15 0.15 0.15 C 80 4228 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 80 5543 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 80 4228 M
0 1315 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 3199 4228 M
0 1315 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.267 .2727 .2771 .2804 .2824 .2832 .2828 .2812 .2785 .2747 .27 .2644 
  .258 .2511 .2437 .2361 .2283 .2204 .2127 .2051 .1977 .1906 .1838 .1773 
  .171 .1648 .1588 .153 .1471 .1414 .1358 .1306 .1259 .1222 .1199 .1196 .122 
  .1277 .1368 .1496 .166 .1855 .208 .2331 .2605 .29 .3213 .3544 .3889 .4249 
  .4622 .5008 .5403 .5809 .6222 .6641 .7064 .7489 .7913 .8333 .8747 .9153 
  .9548 .9932 ] def
/GreenA [.0049 .0258 .0509 .0742 .096 .1169 .1374 .1575 .1773 .197 .2163 
  .2354 .2542 .2726 .2906 .3083 .3256 .3425 .3591 .3754 .3913 .4071 .4226 
  .4379 .4531 .4681 .4831 .4981 .513 .5279 .5428 .5577 .5726 .5875 .6024 
  .6173 .6321 .6469 .6616 .6761 .6905 .7047 .7187 .7324 .7458 .7588 .7715 
  .7837 .7955 .8067 .8173 .8274 .8369 .8457 .8538 .8613 .8682 .8745 .8803 
  .8858 .8909 .896 .901 .9062 ] def
/BlueA [.3294 .3534 .3762 .3979 .4183 .4372 .4546 .4704 .4847 .4973 .5083 
  .5177 .5258 .5325 .5381 .5427 .5463 .5493 .5516 .5535 .555 .5561 .557 
  .5576 .558 .5581 .5581 .5577 .557 .5559 .5543 .5522 .5494 .546 .5418 .5368 
  .5308 .5239 .516 .5069 .4968 .4854 .4729 .4591 .4441 .4278 .4103 .3915 
  .3714 .3501 .3275 .3038 .2789 .253 .2262 .1989 .1715 .145 .1213 .1033 
  .0954 .1005 .1179 .1439 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 1.00 1.00 C 1.000 80 2842 3118 1314 BoxColFill
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 2943 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 3449 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 3955 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 303 2842 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1194 2842 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2085 2842 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2843 2842 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1.000 UP
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 0.15 0.15 0.15 C LTb
LCb setrgbcolor
2.000 UP
4.000 UL
LTb
0.75 0.75 0.75 C 2843 2842 M
0 1315 V
6.226 UP
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.47 0.67 0.19 C 2282 3686 CircleF
2282 3686 CircleF
5.916 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.85 0.33 0.10 C 1047 3311 CircleF
1047 3311 CircleF
6.179 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.93 0.69 0.13 C 2203 3645 CircleF
2203 3645 CircleF
6.154 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.45 0.74 C 2292 3648 CircleF
2292 3648 CircleF
5.671 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.49 0.18 0.56 C 1665 3293 CircleF
1665 3293 CircleF
5.616 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.30 0.75 0.93 C 2741 3427 CircleF
2741 3427 CircleF
6.304 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.98 0.71 0.73 C 2825 3832 CircleF
2825 3832 CircleF
6.356 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.97 0.41 0.63 C 2840 3867 CircleF
2840 3867 CircleF
6.354 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 0.00 1.00 C 2839 3866 CircleF
2839 3866 CircleF
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
0.500 UL
LTb
0.15 0.15 0.15 C 80 2842 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 80 4157 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 80 2842 M
0 1315 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 3199 2842 M
0 1315 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.267 .2727 .2771 .2804 .2824 .2832 .2828 .2812 .2785 .2747 .27 .2644 
  .258 .2511 .2437 .2361 .2283 .2204 .2127 .2051 .1977 .1906 .1838 .1773 
  .171 .1648 .1588 .153 .1471 .1414 .1358 .1306 .1259 .1222 .1199 .1196 .122 
  .1277 .1368 .1496 .166 .1855 .208 .2331 .2605 .29 .3213 .3544 .3889 .4249 
  .4622 .5008 .5403 .5809 .6222 .6641 .7064 .7489 .7913 .8333 .8747 .9153 
  .9548 .9932 ] def
/GreenA [.0049 .0258 .0509 .0742 .096 .1169 .1374 .1575 .1773 .197 .2163 
  .2354 .2542 .2726 .2906 .3083 .3256 .3425 .3591 .3754 .3913 .4071 .4226 
  .4379 .4531 .4681 .4831 .4981 .513 .5279 .5428 .5577 .5726 .5875 .6024 
  .6173 .6321 .6469 .6616 .6761 .6905 .7047 .7187 .7324 .7458 .7588 .7715 
  .7837 .7955 .8067 .8173 .8274 .8369 .8457 .8538 .8613 .8682 .8745 .8803 
  .8858 .8909 .896 .901 .9062 ] def
/BlueA [.3294 .3534 .3762 .3979 .4183 .4372 .4546 .4704 .4847 .4973 .5083 
  .5177 .5258 .5325 .5381 .5427 .5463 .5493 .5516 .5535 .555 .5561 .557 
  .5576 .558 .5581 .5581 .5577 .557 .5559 .5543 .5522 .5494 .546 .5418 .5368 
  .5308 .5239 .516 .5069 .4968 .4854 .4729 .4591 .4441 .4278 .4103 .3915 
  .3714 .3501 .3275 .3038 .2789 .253 .2262 .1989 .1715 .145 .1213 .1033 
  .0954 .1005 .1179 .1439 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 1.00 1.00 C 1.000 80 1456 3118 1314 BoxColFill
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 1557 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 2063 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 2569 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 303 1456 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1194 1456 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2085 1456 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2843 1456 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1.000 UP
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2.000 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.75 0.75 0.75 C 2843 1456 M
0 1315 V
6.123 UP
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.47 0.67 0.19 C 1938 2181 CircleF
1938 2181 CircleF
5.784 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.85 0.33 0.10 C 580 1790 CircleF
580 1790 CircleF
6.068 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.93 0.69 0.13 C 2092 2179 CircleF
2092 2179 CircleF
5.995 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.45 0.74 C 1893 2106 CircleF
1893 2106 CircleF
5.611 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.49 0.18 0.56 C 1595 1868 CircleF
1595 1868 CircleF
5.625 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.30 0.75 0.93 C 2757 2049 CircleF
2757 2049 CircleF
6.185 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.98 0.71 0.73 C 2785 2368 CircleF
2785 2368 CircleF
6.287 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.97 0.41 0.63 C 2835 2438 CircleF
2835 2438 CircleF
6.291 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 0.00 1.00 C 2835 2440 CircleF
2835 2440 CircleF
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
0.500 UL
LTb
0.15 0.15 0.15 C 80 1456 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 80 2771 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 80 1456 M
0 1315 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 3199 1456 M
0 1315 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.267 .2727 .2771 .2804 .2824 .2832 .2828 .2812 .2785 .2747 .27 .2644 
  .258 .2511 .2437 .2361 .2283 .2204 .2127 .2051 .1977 .1906 .1838 .1773 
  .171 .1648 .1588 .153 .1471 .1414 .1358 .1306 .1259 .1222 .1199 .1196 .122 
  .1277 .1368 .1496 .166 .1855 .208 .2331 .2605 .29 .3213 .3544 .3889 .4249 
  .4622 .5008 .5403 .5809 .6222 .6641 .7064 .7489 .7913 .8333 .8747 .9153 
  .9548 .9932 ] def
/GreenA [.0049 .0258 .0509 .0742 .096 .1169 .1374 .1575 .1773 .197 .2163 
  .2354 .2542 .2726 .2906 .3083 .3256 .3425 .3591 .3754 .3913 .4071 .4226 
  .4379 .4531 .4681 .4831 .4981 .513 .5279 .5428 .5577 .5726 .5875 .6024 
  .6173 .6321 .6469 .6616 .6761 .6905 .7047 .7187 .7324 .7458 .7588 .7715 
  .7837 .7955 .8067 .8173 .8274 .8369 .8457 .8538 .8613 .8682 .8745 .8803 
  .8858 .8909 .896 .901 .9062 ] def
/BlueA [.3294 .3534 .3762 .3979 .4183 .4372 .4546 .4704 .4847 .4973 .5083 
  .5177 .5258 .5325 .5381 .5427 .5463 .5493 .5516 .5535 .555 .5561 .557 
  .5576 .558 .5581 .5581 .5577 .557 .5559 .5543 .5522 .5494 .546 .5418 .5368 
  .5308 .5239 .516 .5069 .4968 .4854 .4729 .4591 .4441 .4278 .4103 .3915 
  .3714 .3501 .3275 .3038 .2789 .253 .2262 .1989 .1715 .145 .1213 .1033 
  .0954 .1005 .1179 .1439 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 1.00 1.00 C 1.000 80 70 3118 1314 BoxColFill
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 171 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 677 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 80 1183 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 303 70 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1194 70 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2085 70 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2843 70 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1.000 UP
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 0.15 0.15 0.15 C LTb
LCb setrgbcolor
2.000 UP
4.000 UL
LTb
0.75 0.75 0.75 C 2843 70 M
0 1315 V
5.673 UP
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.85 0.33 0.10 C 355 322 CircleF
355 322 CircleF
5.796 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.93 0.69 0.13 C 1689 586 CircleF
1689 586 CircleF
5.660 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.45 0.74 C 1579 503 CircleF
1579 503 CircleF
5.443 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.49 0.18 0.56 C 1233 353 CircleF
1233 353 CircleF
5.799 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.47 0.67 0.19 C 938 468 CircleF
938 468 CircleF
5.597 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.30 0.75 0.93 C 2664 634 CircleF
2664 634 CircleF
5.938 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.98 0.71 0.73 C 2699 825 CircleF
2699 825 CircleF
6.138 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.97 0.41 0.63 C 2820 960 CircleF
2820 960 CircleF
6.140 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 0.00 1.00 C 2818 961 CircleF
2818 961 CircleF
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
0.500 UL
LTb
0.15 0.15 0.15 C 80 70 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 80 1385 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 80 70 M
0 1315 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 3199 70 M
0 1315 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.267 .2727 .2771 .2804 .2824 .2832 .2828 .2812 .2785 .2747 .27 .2644 
  .258 .2511 .2437 .2361 .2283 .2204 .2127 .2051 .1977 .1906 .1838 .1773 
  .171 .1648 .1588 .153 .1471 .1414 .1358 .1306 .1259 .1222 .1199 .1196 .122 
  .1277 .1368 .1496 .166 .1855 .208 .2331 .2605 .29 .3213 .3544 .3889 .4249 
  .4622 .5008 .5403 .5809 .6222 .6641 .7064 .7489 .7913 .8333 .8747 .9153 
  .9548 .9932 ] def
/GreenA [.0049 .0258 .0509 .0742 .096 .1169 .1374 .1575 .1773 .197 .2163 
  .2354 .2542 .2726 .2906 .3083 .3256 .3425 .3591 .3754 .3913 .4071 .4226 
  .4379 .4531 .4681 .4831 .4981 .513 .5279 .5428 .5577 .5726 .5875 .6024 
  .6173 .6321 .6469 .6616 .6761 .6905 .7047 .7187 .7324 .7458 .7588 .7715 
  .7837 .7955 .8067 .8173 .8274 .8369 .8457 .8538 .8613 .8682 .8745 .8803 
  .8858 .8909 .896 .901 .9062 ] def
/BlueA [.3294 .3534 .3762 .3979 .4183 .4372 .4546 .4704 .4847 .4973 .5083 
  .5177 .5258 .5325 .5381 .5427 .5463 .5493 .5516 .5535 .555 .5561 .557 
  .5576 .558 .5581 .5581 .5577 .557 .5559 .5543 .5522 .5494 .546 .5418 .5368 
  .5308 .5239 .516 .5069 .4968 .4854 .4729 .4591 .4441 .4278 .4103 .3915 
  .3714 .3501 .3275 .3038 .2789 .253 .2262 .1989 .1715 .145 .1213 .1033 
  .0954 .1005 .1179 .1439 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 1.00 1.00 C 1.000 4800 5614 3118 1314 BoxColFill
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 5614 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 5947 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 6280 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 6612 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4850 5614 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 5365 5614 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 5881 5614 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 6396 5614 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 6912 5614 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 7427 5614 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 7766 5614 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1.000 UP
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C LTb
LCb setrgbcolor
2.000 UP
4.000 UL
LTb
0.75 0.75 0.75 C 7766 5614 M
0 1315 V
3.982 UP
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.45 0.74 C 5967 6114 CircleF
5967 6114 CircleF
5.966 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.30 0.75 0.93 C 6988 6502 CircleF
6988 6502 CircleF
6.108 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.85 0.33 0.10 C 7416 6644 CircleF
7416 6644 CircleF
4.769 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.47 0.67 0.19 C 7303 6571 CircleF
7303 6571 CircleF
3.341 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.93 0.69 0.13 C 7138 6466 CircleF
7138 6466 CircleF
3.554 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.49 0.18 0.56 C 7279 6521 CircleF
7279 6521 CircleF
2.649 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.98 0.71 0.73 C 6141 6111 CircleF
6141 6111 CircleF
4.845 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.97 0.41 0.63 C 5096 5861 CircleF
5096 5861 CircleF
0.703 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 0.00 1.00 C 5315 5653 CircleF
5315 5653 CircleF
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
0.500 UL
LTb
0.15 0.15 0.15 C 4800 5614 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 4800 6929 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 4800 5614 M
0 1315 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 7919 5614 M
0 1315 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.267 .2727 .2771 .2804 .2824 .2832 .2828 .2812 .2785 .2747 .27 .2644 
  .258 .2511 .2437 .2361 .2283 .2204 .2127 .2051 .1977 .1906 .1838 .1773 
  .171 .1648 .1588 .153 .1471 .1414 .1358 .1306 .1259 .1222 .1199 .1196 .122 
  .1277 .1368 .1496 .166 .1855 .208 .2331 .2605 .29 .3213 .3544 .3889 .4249 
  .4622 .5008 .5403 .5809 .6222 .6641 .7064 .7489 .7913 .8333 .8747 .9153 
  .9548 .9932 ] def
/GreenA [.0049 .0258 .0509 .0742 .096 .1169 .1374 .1575 .1773 .197 .2163 
  .2354 .2542 .2726 .2906 .3083 .3256 .3425 .3591 .3754 .3913 .4071 .4226 
  .4379 .4531 .4681 .4831 .4981 .513 .5279 .5428 .5577 .5726 .5875 .6024 
  .6173 .6321 .6469 .6616 .6761 .6905 .7047 .7187 .7324 .7458 .7588 .7715 
  .7837 .7955 .8067 .8173 .8274 .8369 .8457 .8538 .8613 .8682 .8745 .8803 
  .8858 .8909 .896 .901 .9062 ] def
/BlueA [.3294 .3534 .3762 .3979 .4183 .4372 .4546 .4704 .4847 .4973 .5083 
  .5177 .5258 .5325 .5381 .5427 .5463 .5493 .5516 .5535 .555 .5561 .557 
  .5576 .558 .5581 .5581 .5577 .557 .5559 .5543 .5522 .5494 .546 .5418 .5368 
  .5308 .5239 .516 .5069 .4968 .4854 .4729 .4591 .4441 .4278 .4103 .3915 
  .3714 .3501 .3275 .3038 .2789 .253 .2262 .1989 .1715 .145 .1213 .1033 
  .0954 .1005 .1179 .1439 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 1.00 1.00 C 1.000 4800 4228 3118 1314 BoxColFill
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 4228 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 4561 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 4894 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 5226 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4850 4228 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 5365 4228 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 5881 4228 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 6396 4228 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 6912 4228 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 7427 4228 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 7766 4228 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1.000 UP
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2.000 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.75 0.75 0.75 C 7766 4228 M
0 1315 V
5.833 UP
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.30 0.75 0.93 C 6795 5050 CircleF
6795 5050 CircleF
4.655 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.85 0.33 0.10 C 7376 5205 CircleF
7376 5205 CircleF
4.563 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.45 0.74 C 6836 5028 CircleF
6836 5028 CircleF
3.421 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.49 0.18 0.56 C 7280 5130 CircleF
7280 5130 CircleF
4.153 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.47 0.67 0.19 C 7151 5116 CircleF
7151 5116 CircleF
3.326 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.93 0.69 0.13 C 7139 5080 CircleF
7139 5080 CircleF
2.723 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.98 0.71 0.73 C 6228 4757 CircleF
6228 4757 CircleF
6.795 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 0.00 1.00 C 5867 4773 CircleF
5867 4773 CircleF
6.779 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.97 0.41 0.63 C 5898 4783 CircleF
5898 4783 CircleF
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
0.500 UL
LTb
0.15 0.15 0.15 C 4800 4228 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 4800 5543 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 4800 4228 M
0 1315 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 7919 4228 M
0 1315 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.267 .2727 .2771 .2804 .2824 .2832 .2828 .2812 .2785 .2747 .27 .2644 
  .258 .2511 .2437 .2361 .2283 .2204 .2127 .2051 .1977 .1906 .1838 .1773 
  .171 .1648 .1588 .153 .1471 .1414 .1358 .1306 .1259 .1222 .1199 .1196 .122 
  .1277 .1368 .1496 .166 .1855 .208 .2331 .2605 .29 .3213 .3544 .3889 .4249 
  .4622 .5008 .5403 .5809 .6222 .6641 .7064 .7489 .7913 .8333 .8747 .9153 
  .9548 .9932 ] def
/GreenA [.0049 .0258 .0509 .0742 .096 .1169 .1374 .1575 .1773 .197 .2163 
  .2354 .2542 .2726 .2906 .3083 .3256 .3425 .3591 .3754 .3913 .4071 .4226 
  .4379 .4531 .4681 .4831 .4981 .513 .5279 .5428 .5577 .5726 .5875 .6024 
  .6173 .6321 .6469 .6616 .6761 .6905 .7047 .7187 .7324 .7458 .7588 .7715 
  .7837 .7955 .8067 .8173 .8274 .8369 .8457 .8538 .8613 .8682 .8745 .8803 
  .8858 .8909 .896 .901 .9062 ] def
/BlueA [.3294 .3534 .3762 .3979 .4183 .4372 .4546 .4704 .4847 .4973 .5083 
  .5177 .5258 .5325 .5381 .5427 .5463 .5493 .5516 .5535 .555 .5561 .557 
  .5576 .558 .5581 .5581 .5577 .557 .5559 .5543 .5522 .5494 .546 .5418 .5368 
  .5308 .5239 .516 .5069 .4968 .4854 .4729 .4591 .4441 .4278 .4103 .3915 
  .3714 .3501 .3275 .3038 .2789 .253 .2262 .1989 .1715 .145 .1213 .1033 
  .0954 .1005 .1179 .1439 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 1.00 1.00 C 1.000 4800 2842 3118 1314 BoxColFill
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 2842 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 3175 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 3508 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 3840 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4850 2842 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 5365 2842 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 5881 2842 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 6396 2842 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 6912 2842 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 7427 2842 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 7766 2842 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1.000 UP
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 0.15 0.15 0.15 C LTb
LCb setrgbcolor
2.000 UP
4.000 UL
LTb
0.75 0.75 0.75 C 7766 2842 M
0 1315 V
4.756 UP
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.45 0.74 C 7114 3738 CircleF
7114 3738 CircleF
4.664 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.85 0.33 0.10 C 7379 3821 CircleF
7379 3821 CircleF
3.259 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.49 0.18 0.56 C 7284 3738 CircleF
7284 3738 CircleF
3.878 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.47 0.67 0.19 C 7119 3710 CircleF
7119 3710 CircleF
3.364 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.93 0.69 0.13 C 7148 3699 CircleF
7148 3699 CircleF
5.835 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.30 0.75 0.93 C 6737 3646 CircleF
6737 3646 CircleF
2.948 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.98 0.71 0.73 C 6345 3421 CircleF
6345 3421 CircleF
6.578 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 0.00 1.00 C 5998 3425 CircleF
5998 3425 CircleF
6.483 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.97 0.41 0.63 C 5961 3410 CircleF
5961 3410 CircleF
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
0.500 UL
LTb
0.15 0.15 0.15 C 4800 2842 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 4800 4157 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 4800 2842 M
0 1315 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 7919 2842 M
0 1315 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.267 .2727 .2771 .2804 .2824 .2832 .2828 .2812 .2785 .2747 .27 .2644 
  .258 .2511 .2437 .2361 .2283 .2204 .2127 .2051 .1977 .1906 .1838 .1773 
  .171 .1648 .1588 .153 .1471 .1414 .1358 .1306 .1259 .1222 .1199 .1196 .122 
  .1277 .1368 .1496 .166 .1855 .208 .2331 .2605 .29 .3213 .3544 .3889 .4249 
  .4622 .5008 .5403 .5809 .6222 .6641 .7064 .7489 .7913 .8333 .8747 .9153 
  .9548 .9932 ] def
/GreenA [.0049 .0258 .0509 .0742 .096 .1169 .1374 .1575 .1773 .197 .2163 
  .2354 .2542 .2726 .2906 .3083 .3256 .3425 .3591 .3754 .3913 .4071 .4226 
  .4379 .4531 .4681 .4831 .4981 .513 .5279 .5428 .5577 .5726 .5875 .6024 
  .6173 .6321 .6469 .6616 .6761 .6905 .7047 .7187 .7324 .7458 .7588 .7715 
  .7837 .7955 .8067 .8173 .8274 .8369 .8457 .8538 .8613 .8682 .8745 .8803 
  .8858 .8909 .896 .901 .9062 ] def
/BlueA [.3294 .3534 .3762 .3979 .4183 .4372 .4546 .4704 .4847 .4973 .5083 
  .5177 .5258 .5325 .5381 .5427 .5463 .5493 .5516 .5535 .555 .5561 .557 
  .5576 .558 .5581 .5581 .5577 .557 .5559 .5543 .5522 .5494 .546 .5418 .5368 
  .5308 .5239 .516 .5069 .4968 .4854 .4729 .4591 .4441 .4278 .4103 .3915 
  .3714 .3501 .3275 .3038 .2789 .253 .2262 .1989 .1715 .145 .1213 .1033 
  .0954 .1005 .1179 .1439 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 1.00 1.00 C 1.000 4800 1456 3118 1314 BoxColFill
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 1456 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 1789 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 2122 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 2454 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4850 1456 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 5365 1456 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 5881 1456 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 6396 1456 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 6912 1456 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 7427 1456 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 7766 1456 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1.000 UP
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 2.000 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.75 0.75 0.75 C 7766 1456 M
0 1315 V
6.177 UP
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.85 0.33 0.10 C 7431 2492 CircleF
7431 2492 CircleF
4.946 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.45 0.74 C 7236 2397 CircleF
7236 2397 CircleF
4.257 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.47 0.67 0.19 C 7226 2372 CircleF
7226 2372 CircleF
3.236 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.93 0.69 0.13 C 7184 2319 CircleF
7184 2319 CircleF
2.880 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.49 0.18 0.56 C 7297 2339 CircleF
7297 2339 CircleF
4.842 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.30 0.75 0.93 C 6697 2220 CircleF
6697 2220 CircleF
2.423 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.98 0.71 0.73 C 6610 2092 CircleF
6610 2092 CircleF
5.069 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 0.00 1.00 C 6161 2053 CircleF
6161 2053 CircleF
4.860 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.97 0.41 0.63 C 6178 2053 CircleF
6178 2053 CircleF
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
0.500 UL
LTb
0.15 0.15 0.15 C 4800 1456 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 4800 2771 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 4800 1456 M
0 1315 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 7919 1456 M
0 1315 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C grestore % colour palette end
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.267 .2727 .2771 .2804 .2824 .2832 .2828 .2812 .2785 .2747 .27 .2644 
  .258 .2511 .2437 .2361 .2283 .2204 .2127 .2051 .1977 .1906 .1838 .1773 
  .171 .1648 .1588 .153 .1471 .1414 .1358 .1306 .1259 .1222 .1199 .1196 .122 
  .1277 .1368 .1496 .166 .1855 .208 .2331 .2605 .29 .3213 .3544 .3889 .4249 
  .4622 .5008 .5403 .5809 .6222 .6641 .7064 .7489 .7913 .8333 .8747 .9153 
  .9548 .9932 ] def
/GreenA [.0049 .0258 .0509 .0742 .096 .1169 .1374 .1575 .1773 .197 .2163 
  .2354 .2542 .2726 .2906 .3083 .3256 .3425 .3591 .3754 .3913 .4071 .4226 
  .4379 .4531 .4681 .4831 .4981 .513 .5279 .5428 .5577 .5726 .5875 .6024 
  .6173 .6321 .6469 .6616 .6761 .6905 .7047 .7187 .7324 .7458 .7588 .7715 
  .7837 .7955 .8067 .8173 .8274 .8369 .8457 .8538 .8613 .8682 .8745 .8803 
  .8858 .8909 .896 .901 .9062 ] def
/BlueA [.3294 .3534 .3762 .3979 .4183 .4372 .4546 .4704 .4847 .4973 .5083 
  .5177 .5258 .5325 .5381 .5427 .5463 .5493 .5516 .5535 .555 .5561 .557 
  .5576 .558 .5581 .5581 .5577 .557 .5559 .5543 .5522 .5494 .546 .5418 .5368 
  .5308 .5239 .516 .5069 .4968 .4854 .4729 .4591 .4441 .4278 .4103 .3915 
  .3714 .3501 .3275 .3038 .2789 .253 .2262 .1989 .1715 .145 .1213 .1033 
  .0954 .1005 .1179 .1439 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 1.00 1.00 C 1.000 4800 70 3118 1314 BoxColFill
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 70 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 403 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 736 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4800 1068 M
88 0 V
3031 0 R
-88 0 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 4850 70 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 5365 70 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 5881 70 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 6396 70 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 6912 70 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 7427 70 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 7766 70 M
0 88 V
0 1227 R
0 -88 V
stroke
0.15 0.15 0.15 C 1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 1.000 UP
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C 0.15 0.15 0.15 C LTb
LCb setrgbcolor
2.000 UP
4.000 UL
LTb
0.75 0.75 0.75 C 7766 70 M
0 1315 V
6.114 UP
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.85 0.33 0.10 C 7452 1111 CircleF
7452 1111 CircleF
5.219 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.47 0.67 0.19 C 7392 1069 CircleF
7392 1069 CircleF
4.342 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.45 0.74 C 7300 1013 CircleF
7300 1013 CircleF
3.031 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.93 0.69 0.13 C 7280 954 CircleF
7280 954 CircleF
2.415 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.49 0.18 0.56 C 7354 946 CircleF
7354 946 CircleF
2.773 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.30 0.75 0.93 C 6863 807 CircleF
6863 807 CircleF
2.222 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.98 0.71 0.73 C 6813 759 CircleF
6813 759 CircleF
3.391 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.00 0.00 1.00 C 6421 693 CircleF
6421 693 CircleF
3.263 UP
4.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.97 0.41 0.63 C 6404 682 CircleF
6404 682 CircleF
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
1.000 UP
0.500 UL
LTb
0.15 0.15 0.15 C 4800 70 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 4800 1385 M
3119 0 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 4800 70 M
0 1315 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.15 0.15 0.15 C 7919 70 M
0 1315 V
stroke
1.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
0.00 0.00 0.00 C grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
