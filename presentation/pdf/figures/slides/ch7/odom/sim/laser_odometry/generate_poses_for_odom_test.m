x =[...
  -1.892445,...
  -1.815097,...
  -1.660399,...
  -1.505702,...
  -1.370341,...
  -1.351004,...
  -1.292993,...
  -1.292993,...
  -1.196307,...
  -1.080284,...
  -1.041610,...
  -0.964261,...
  -0.906249,...
  -0.828901,...
  -0.538843,...
  -0.461494,...
  -0.326134,...
  -0.210111,...
   0.060609,...
   0.292656,...
   0.853434,...
   1.008131,...
   1.336863,...
   1.336863,...
   1.375537,...
   1.568909,...
   1.781618,...
   2.110350,...
   2.361733,...
   2.361733,...
   2.845163,...
   3.115883,...
   3.270581,...
   3.560638,...
   3.676661,...
   3.850696,...
   4.160091,...
   4.372800,...
   4.566171,...
   4.817555,...
   4.914241,...
   4.972252,...
   5.068938,...
   5.184961,...
   5.223635,...
   5.223635,...
   5.300984,...
   5.339658,...
   5.397670,...
   5.436344,...
   5.494356,...
   5.397670,...
   5.397670,...
   5.242973,...
   5.088275,...
   4.798217,...
   4.450148,...
   4.140754,...
   3.657324,...
   3.560638,...
   3.637987,...
   3.850696,...
   4.063405,...
   4.218102,...
   4.218102,...
   4.237439,...
   4.237439,...
   4.218102,...
   4.218102,...
   4.198765,...
   4.160091,...
   4.082742,...
   3.908707,...
   3.908707,...
   3.618650,...
   3.367267,...
   2.922511,...
   2.922511,...
   2.651791,...
   2.458419,...
   2.439082,...
   2.419745,...
   2.477756,...
   2.477756,...
   2.690465,...
   2.806488,...
   2.864500,...
   2.980523,...
   3.154558,...
   3.173895];

y = [...
    6.5667,...
    6.5860,...
    6.6827,...
    6.7020,...
    6.7794,...
    6.8180,...
    6.9341,...
    6.9341,...
    7.1081,...
    7.3595,...
    7.4368,...
    7.7269,...
    7.8236,...
    7.8429,...
    7.7075,...
    7.4948,...
    7.3595,...
    7.3208,...
    7.2435,...
    7.2435,...
    7.2435,...
    7.2628,...
    7.4562,...
    7.4562,...
    7.5335,...
    7.7269,...
    7.8429,...
    8.0363,...
    8.1910,...
    8.1910,...
    8.2683,...
    8.3070,...
    8.2877,...
    8.2103,...
    8.1523,...
    8.1136,...
    8.0943,...
    8.0943,...
    8.0943,...
    8.1136,...
    8.1523,...
    8.2683,...
    8.4424,...
    8.6937,...
    8.8871,...
    9.0418,...
    9.4286,...
    9.5446,...
    9.7960,...
   10.0860,...
   10.4341,...
   10.5888,...
   10.5888,...
   10.7241,...
   10.7822,...
   10.9562,...
   11.1109,...
   11.2462,...
   11.7297,...
   11.8650,...
   12.0391,...
   12.3291,...
   12.6579,...
   12.9673,...
   13.3347,...
   13.5860,...
   13.6827,...
   13.7794,...
   14.0308,...
   14.2435,...
   14.3402,...
   14.5916,...
   14.8236,...
   14.8236,...
   14.9203,...
   14.9203,...
   14.9203,...
   14.9203,...
   14.8430,...
   14.6883,...
   14.5916,...
   14.4562,...
   14.2435,...
   14.2435,...
   13.8181,...
   13.6441,...
   13.4894,...
   13.1993,...
   12.9092,...
   12.8706]



% The trajectory
path = [x;y];

% Get the orientations
diff_x = gradient(path(1,:));
diff_y = gradient(path(2,:));

t = atan2(diff_y,diff_x);

for i=1:size(t,2)
  if abs(t(i)) == pi/2
    t(i) = t(i)- pi/20;
  end
end

t(end+1) = t(end);
t = t(2:end);

trj = [path; t];


printf('std::vector< std::tuple<double,double,double> > virtual_poses;\n');
printf('std::vector< std::tuple<double,double,double> > real_poses;\n');
printf('std::tuple<double,double,double> virtual_pose;\n');
printf('std::tuple<double,double,double> real_pose;\n');
for i=1:size(trj,2)-1
  printf('//-------------------------------------------------\n')
  printf('// Pose no. %d/%d\n', i, size(trj,2)-1);
  printf('std::get<0>(virtual_pose) = %f;\n', trj(1,i));
  printf('std::get<1>(virtual_pose) = %f;\n', trj(2,i));
  printf('std::get<2>(virtual_pose) = %f;\n', trj(3,i));
  printf('std::get<0>(real_pose) = %f;\n', trj(1,i+1));
  printf('std::get<1>(real_pose) = %f;\n', trj(2,i+1));
  printf('std::get<2>(real_pose) = %f;\n', trj(3,i+1));
  printf('virtual_poses->push_back(virtual_pose);\n');
  printf('real_poses->push_back(real_pose);\n');
end
